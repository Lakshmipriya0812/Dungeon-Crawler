include:
  - template: Code-Quality.gitlab-ci.yml

image: gradle:6.6.1-jdk11

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

build:
  stage: build
  script:
    - gradle --build-cache assemble
    - echo $CI_BUILD_PATH
    - echo $CI_PROJECT_DIR
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle

code_quality:
  stage: test
  allow_failure: false
  variables:
    CODE_QUALITY_IMAGE: "registry.gitlab.com/gitlab-org/ci-cd/codequality:latest"
  artifacts:
    expose_as: 'Code Quality Report'
    paths: [ gl-code-quality-report.json ]

test:
  stage: test
  script:
    - 'gradle test jacocoTestReport'
  artifacts:
    when: always
    expose_as: 'Jacoco Test Report'
    paths:
      - builds/jacoco/jacoco.xml
    reports:
      junit: build/test-results/test/**/TEST-*.xml

code_quality_html:
  extends: code_quality
  variables:
    REPORT_FORMAT: html
  artifacts:
    expose_as: 'Code Quality Report HTML'
    paths: [ gl-code-quality-report.html ]


mutation-coverage:
  stage: test
  script:
    - 'gradle test pitest'
    - 'tar -czvf build/reports/pitest.tar.gz build/reports/pitest/'
  artifacts:
    when: always
    expose_as: 'Pitest Report'
    paths:
      - build/reports/pitest.tar.gz

